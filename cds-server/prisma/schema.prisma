generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model likehistory {
  id         Int     @id(map: "like_pkey") @default(autoincrement())
  user_id    Int
  project_id Int
  project    project @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "like_project_id_fk")
  user       user    @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "like_user_id_fk")
}

model moodboard {
  id                Int                 @id @default(autoincrement())
  is_public         Boolean
  name              String              @db.VarChar(50)
  user_id           Int
  user              user                @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "moodboard_user_id_fk")
  project           project[]
}


model project {
  id                Int                 @id @default(autoincrement())
  view_count        Int
  image             String              @db.VarChar(600)
  user_id           Int
  name              String              @db.VarChar(50)
  likeSum           Int
  user              user                @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "project_user_id_fk")
  likehistory       likehistory[]
  moodboard         moodboard           @relation(fields: [moodboard_id], references: [id])
  moodboard_id      Int
}

model user {
  id          Int           @id(map: "User_pkey") @default(autoincrement())
  name        String        @db.VarChar(50)
  likehistory likehistory[]
  moodboard   moodboard[]
  project     project[]
}

model Userrrr {
  id       Int    @id(map: "userrrr_pk") @unique(map: "userrrr_id_uindex") @default(autoincrement())
  userName String @db.VarChar(100)
  age      Int?
  email    String @db.VarChar(400)
  password String @db.VarChar(400)
}
